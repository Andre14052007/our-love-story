---
const navItems = [
  { name: 'Home', href: '/', icon: 'M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6' },
  { name: 'Our Story', href: '/story', icon: 'M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z' },
  { name: 'Gallery', href: '/gallery', icon: 'M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z' },
  { name: 'Timeline', href: '/timeline', icon: 'M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z' },
];

const pathname = new URL(Astro.request.url).pathname;
---

<nav class="fixed w-full z-50 bg-black/30 backdrop-blur-md">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <div class="flex">
        <div class="flex-shrink-0 flex items-center">
          <a 
            href="/" 
            class="group flex items-center gap-2"
          >
            <div class="w-8 h-8 rounded-full bg-gradient-to-r from-rose-500 to-purple-500 flex items-center justify-center">
              <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
              </svg>
            </div>
            <span class="font-playfair text-2xl bg-gradient-to-r from-rose-300 to-purple-300 text-transparent bg-clip-text group-hover:from-rose-200 group-hover:to-purple-200 transition-all">
              Our Story
            </span>
          </a>
        </div>
      </div>
      <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
        {navItems.map(item => {
          const isActive = pathname === item.href;
          return (
            <a
              href={item.href}
              class={`group flex items-center px-1 pt-1 text-sm font-medium transition-all border-b-2 ${
                isActive 
                  ? 'text-white border-rose-500' 
                  : 'text-gray-300 border-transparent hover:text-white hover:border-rose-500/50'
              }`}
            >
              <svg 
                class={`w-4 h-4 mr-2 transition-colors ${
                  isActive ? 'text-rose-500' : 'text-current group-hover:text-rose-500'
                }`} 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon} />
              </svg>
              {item.name}
            </a>
          );
        })}
      </div>
      <div class="flex items-center sm:hidden">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-300 hover:text-white hover:bg-white/10 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-rose-500 transition-all"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="block h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="sm:hidden hidden" id="mobile-menu">
    <div class="pt-2 pb-3 space-y-1 bg-black/30 backdrop-blur-md border-t border-white/10">
      {navItems.map(item => {
        const isActive = pathname === item.href;
        return (
          <a
            href={item.href}
            class={`group flex items-center pl-3 pr-4 py-2 text-base font-medium transition-all ${
              isActive
                ? 'text-white bg-white/10'
                : 'text-gray-300 hover:text-white hover:bg-white/5'
            }`}
          >
            <svg 
              class={`w-5 h-5 mr-3 transition-colors ${
                isActive ? 'text-rose-500' : 'text-current group-hover:text-rose-500'
              }`}
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={item.icon} />
            </svg>
            {item.name}
          </a>
        );
      })}
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.querySelector('.mobile-menu-button');
  const mobileMenu = document.querySelector('#mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });
</script>
